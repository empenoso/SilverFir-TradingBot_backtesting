# –ó–∞–ø—É—Å–∫ –±—ç–∫—Ç–µ—Å—Ç–∞

import asyncio
import pandas as pd
from backtesting import Backtest
from data_loader import fetch_moex_data
from strategy import LongOnlyPMAMultiTimeframeATRTrailingStop

async def run_backtest(ticker):
    print(f"\n{'='*50}")
    print(f"üöÄ –ó–∞–ø—É—Å–∫ –±—ç–∫—Ç–µ—Å—Ç–∞ –¥–ª—è {ticker}")
    print(f"{'='*50}\n")

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    df, start_str, end_str = await fetch_moex_data(ticker) # –ü–æ–ª—É—á–∞–µ–º start_str –∏ end_str

    if df is None or df.empty:
        raise ValueError("‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞–Ω–Ω—ã—Ö (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
    print("\nüìã –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ (–¥–ª—è —Å–ø—Ä–∞–≤–∫–∏):")
    print(f"–ö–æ–ª–æ–Ω–∫–∏ –≤ –¥–∞–Ω–Ω—ã—Ö: {list(df.columns)}")
    print(f"–ü–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö:")
    print(df.head())
    print(f"–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö:")
    print(df.dtypes)
    print("\n")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–ª–æ–Ω–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    required_columns = ['Open', 'High', 'Low', 'Close', 'Volume']
    if not all(col in df.columns for col in required_columns):
        missing = [col for col in required_columns if col not in df.columns]
        raise ValueError(f"‚ùå –í –¥–∞–Ω–Ω—ã—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–ª–æ–Ω–∫–∏: {missing}")

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±—ç–∫—Ç–µ—Å—Ç
    print("‚è≥ –ó–∞–ø—É—Å–∫ –±—ç–∫—Ç–µ—Å—Ç–∞...")
    strategy_class = LongOnlyPMAMultiTimeframeATRTrailingStop # –ö–ª–∞—Å—Å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–∂–Ω–∏–º
    strategy_name = f"{ticker}_{start_str}_{end_str}_LongOnlyPMAMultiTimeframeATRTrailingStop" # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –∏–º—è
    DynamicStrategyClass = type(strategy_name, (strategy_class,), {}) # –°–æ–∑–¥–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∫–ª–∞—Å—Å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
    bt = Backtest(df, DynamicStrategyClass, cash=100_000, commission=0.002) # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∫–ª–∞—Å—Å
    stats = bt.run()

    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—ç–∫—Ç–µ—Å—Ç–∞:")
    print(f"‚öôÔ∏è –°—Ç—Ä–∞—Ç–µ–≥–∏—è: {strategy_name}") # –í—ã–≤–æ–¥–∏–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –∏–º—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
    print(f"üìÖ –ü–µ—Ä–∏–æ–¥ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: —Å {stats['Start']} –ø–æ {stats['End']}")
    print(f"üí∞ –ù–∞—á–∞–ª—å–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª: 100,000 —Ä—É–±.")
    print(f"üíµ –ö–æ–Ω–µ—á–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª: {stats['Equity Final [$]']:.2f} —Ä—É–±.")
    print(f"üìà –û–±—â–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: {stats['Return [%]']:.2f}%")
    print(f"üìä –ì–æ–¥–æ–≤–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: {stats['Return (Ann.) [%]']:.2f}%") 
    print(f"üìà –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –®–∞—Ä–ø–∞: {stats['Sharpe Ratio']:.2f}") 
    print(f"üìâ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ—Å–∞–¥–∫–∞: {stats['Max. Drawdown [%]']:.2f}%")
    print(f"üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫: {stats['# Trades']}")
    print(f"‚úÖ –ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: {stats['Win Rate [%]']:.2f}%")
    print(f"üí™ –õ—É—á—à–∞—è —Å–¥–µ–ª–∫–∞: +{stats['Best Trade [%]']:.2f}%")
    print(f"üôÅ –•—É–¥—à–∞—è —Å–¥–µ–ª–∫–∞: {stats['Worst Trade [%]']:.2f}%")
    print(f"‚è±Ô∏è –°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–¥–µ–ª–∫–∏: {stats['Avg. Trade Duration']}")
    # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
    print("\nüìä –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")
    try:
        bt.plot()
        print("‚úÖ –ì—Ä–∞—Ñ–∏–∫ —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω!")
    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞: {e}")
        print("üí° –°–æ–≤–µ—Ç: –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å bokeh —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã 'pip install --upgrade bokeh'")
    print(f"\n{'='*50}")
    print(f"üèÅ –ë—ç–∫—Ç–µ—Å—Ç –¥–ª—è {ticker} –∑–∞–≤–µ—Ä—à–µ–Ω")
    print(f"{'='*50}\n")
    return stats